#!/bin/bash
# used to see cluster top info when job management system is not installed
# required nprsh: Last Change: 2009-06-16 18:15.
# required a rsa-key.pub to other nodes 

myself=$0
NPRSH_PAHT="/home/jhli/Program/nprsh"
NODEs='node0...24'

CDEF=" \033[0m"     ;  b_CDEF=" \033[1m" 
CRED=" \033[0;31m"  ;  b_CRED=" \033[1;31m"
CCYA=" \033[0;36m"  ;  b_CCYA=" \033[1;36m"
CMAG=" \033[0;35m"  ;  b_CMAG=" \033[1;35m"
CBLU=" \033[0;34m"  ;  b_CBLU=" \033[1;34m"
CGRE=" \033[0;32m"  ;  b_CGRE=" \033[1;32m"
CYEL=" \033[0;33m"  ;  b_CYEL=" \033[1;33m"

colorful ()
{
cllist=("$b_CCYA" "$b_CMAG" "$b_CBLU" "$b_CYEL" "$b_CGRE")
num_line=$(echo "$1" | wc -l)
for i in $(seq 1 $num_line); do
    sinline=$(echo "$1" | sed -n ${i}p)
    node=$(echo "$sinline" | awk '{print $1}')
    if [[ $i -gt 1 ]]; then
        pnode=$(echo "$1" | sed -n $[i-1]p | awk '{print $1}')
    fi
    if [[ ! -z $(echo "$sinline" | grep "THIS IS A FREE NODE") ]]; then
        echo -e "${b_CRED}${sinline}${CDEF}"
    elif [[ ! -z $(echo "$sinline" | grep "No route to host") ]]; then
        echo -e "${CDEF}${sinline}${CDEF}"
    else
        if [[ $i -gt 1 ]] && [[ $node == $pnode ]]; then
            j=$pj
        else
            j=$(($i % 5)); pj=$j
        fi
        echo -e "${cllist[$j]}${sinline}${CDEF}"
    fi
done
}

if [ -z $1 ] || [ $1 = 'full' ]; then
    [[ $1 = 'full' ]] && comlen=10000 || comlen=100
    echo "USER:RES(GB):%CPU:COMMAND" | awk -F':' '{printf "%20s %20s %10s %-80s\n", $1,$2,$3,$4}'
    out=$($NPRSH_PATH -nc -on "$NODEs" "${myself} LocalNodeInfo $comlen" 2> /dev/null)
    OUT=$(echo "$out" | sort -k2n -t'e')
    colorful "$OUT"
    echo
    echo
fi

if [[ $1 = 'LocalNodeInfo' ]]; then
    export COLUMNS=10000
    cmd_len=$2
    info=$(top -b -n 1 -c -i | grep -A 200 USER)
    title=($(echo "$info" | sed -n 1p))
    for i in "${!title[@]}"; do
        if   [ "${title[$i]}" = "USER" ];    then ind_user=$i
        elif [ "${title[$i]}" = "RES" ];     then ind_memo=$i
        elif [ "${title[$i]}" = "%CPU" ];    then ind_pcpu=$i
        elif [ "${title[$i]}" = "COMMAND" ]; then ind_cmdl=$i
        fi
    done

    sinfo=$(echo "$info" | sed "1d; /top \-b \-n 1 \-c \-i/d" | sort -k $ind_user) # sort for flag
    [[ -z $sinfo ]] && echo -e "     THIS IS A FREE NODE!" && exit
    l_num=$(echo "$sinfo" | wc -l)
    flag=0
    for i in $(seq 1 $l_num); do
        if [ $flag -eq 0 ]; then
            line=($(echo "$sinfo" | sed -n ${i}p))
            user=${line[$ind_user]}
            resm=${line[$ind_memo]}
            [[ $resm =~ "g" ]] && resm=${resm/g/} || resm=$(echo "$resm" | awk '{$1=$1/1024/1024; printf "%.2f", $1}')
            pcpu=${line[$ind_pcpu]}
            cmdl=${line[@]:$ind_cmdl:10000} # it should output blank for outage!
        fi
        if [ $i -gt 1 ]; then
            p_line=($(echo "$sinfo" | sed -n $[i-1]p))
            p_user=${p_line[$ind_user]}
            p_cmdl=${p_line[@]:$ind_cmdl:10000}
            if [[ $user = $p_user ]]; then
                flag=1
                p_resm=${p_line[$ind_memo]}
                [[ $p_resm =~ "g" ]] && p_resm=${p_resm/g/} || p_resm=$(echo "$p_resm" | awk '{$1=$1/1024/1024; printf "%.2f", $1}')
                p_pcpu=${p_line[$ind_pcpu]}
                resm=$(echo ${resm} ${p_resm} | awk '{sum=$1+$2; printf "%.2f", sum}')
                pcpu=$(echo $pcpu $p_pcpu | awk '{$1=$1+$2; print $1}')
            else
                flag=0
                outinfo=$(echo " ${p_user} ${resm} $pcpu" | awk '{printf " %12s %20s %10s ", $1,$2,$3}')
                echo "$outinfo ${p_cmdl:0:$cmd_len}"
            fi
        fi
        if [[ $i -eq $l_num ]]; then
            outinfo=$(echo " ${user} $resm $pcpu" | awk '{printf " %12s %20s %10s ", $1,$2,$3}')
            echo "$outinfo ${cmdl:0:$cmd_len}"
        fi
    done
    #echo
    exit # NodeInfo stops here
fi

CLINFO=$(nprsh -on "$NODEs" \
  "cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c ; cat /proc/meminfo | head -1" \
  | tr -s "\n" "\t" | sed s/"B\t"/"B\n"/g | sort -k2,2nr -k11,11nr | sed s/"\ kB"/":GB"/g \
  | awk -F':' '{$2=($2/1024/1024); print}' | sed 's/:GB/\ GB/g; /No route/d')
NUM_CPU=$(echo "$CLINFO" | awk '{cpu+=$2}END {print cpu}')
NUM_MEM=$(echo "$CLINFO" | awk '{mem+=$(NF-1)}END {print mem}')
echo "Still working nodes:"
echo "$CLINFO"
echo "Total CPU threads:   $NUM_CPU"
echo "Total Mem (GB):    $NUM_MEM"
echo
